security:
  access_decision_manager:
    strategy: affirmative # default
  encoders:
    App\Entity\User: bcrypt
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    #users_in_memory: { memory: null }
    # you can define some static users
    database_users:
      entity: { class: App\Entity\User, property: username }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: lazy
      pattern: ^/
      # provider: users_in_memory
      # http_basic: ~
      form_login:
        check_path: security_login
        login_path: security_login
        csrf_token_generator: security.csrf.token_manager
        default_target_path: micro_post_index
        #csrf_parameter:
        #username_parameter: _username
        #password_parameter: _password
        #use_referer: true - redirect user on a last page that he attempted to see
        #failure_path:
      logout:
        path: security_logout
        target: micro_post_index
      # always_use_default_target_path: false
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:

  role_hierarchy:
    ROLE_ADMIN: ROLE_USER
